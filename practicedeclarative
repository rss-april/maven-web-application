pipeline {
    agent any
    options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
timestamps()
        
    }
triggers {
  pollSCM '* * * * *                     '
}

    tools{
        maven 'maven3.8.6'
    }
    stages{
        stage('checkout'){
            steps{
                git branch: 'development', credentialsId: '80b6e311-895e-4e16-afb1-bf57b7a1b124', url: 'https://github.com/rss-april/maven-web-application.git'
            }
        }
        stage('build'){
            steps{
                sh "mvn clean package"
            }
        }
        stage('sonarreport'){
        steps{
            sh "mvn clean sonar:sonar"
        }
        }
        stage('uploadtonexus'){
            steps{
                sh "mvn clean deploy"
            }
        }
        stage('deploytotomcat'){
            steps{
                 sshagent(['91ca626c-4ea5-47bc-b5f2-d16e35b99b64']) {
    sh "scp -o strictHostKeyChecking=no target/maven-web-application.war ec2-user@3.110.176.140:/opt/apache-tomcat-9.0.65/webapps/"
            }
            }
        }
    }//stages closing
    post {
  aborted {
   notifyBuild(currentBuild.result)
  }
  success {
    notifyBuild(currentBuild.result)
  }
  failure {
    notifyBuild(currentBuild.result)
  }
}
}//pipeline closing
//code snippet for sending slack notifications
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel:"#chetan")
}
