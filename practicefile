node {
    def mavenhome=tool name:"maven3.8.6"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
   echo "jenkins url is:${env.JENKINS_URL}"
    stage('checkout'){
        git branch: 'development', credentialsId: '80b6e311-895e-4e16-afb1-bf57b7a1b124', url: 'https://github.com/rss-april/maven-web-application.git'
    }
    try{
    notifyBuild('STARTED')
    stage('build'){
        sh "${mavenhome}/bin/mvn clean package"
    }
    stage('exectesonarqubereport'){
        sh "${mavenhome}/bin/mvn clean sonar:sonar package"
    }
    stage('uploadintonexus'){
        sh "${mavenhome}/bin/mvn clean deploy"
    }
    stage('deployintotomcat'){
        sshagent(['91ca626c-4ea5-47bc-b5f2-d16e35b99b64']) {
    sh "scp -o strictHostKeyChecking=no target/maven-web-application.war ec2-user@3.109.213.128:/opt/apache-tomcat-9.0.65/webapps/"
}
    }
    }//try closing
    catch (e){
   notifyBuild('FAILED')
   throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
    
}//node closing
/* //code snippet for sending slack notifications
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel:"#chetan")
}*/
